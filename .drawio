<mxfile host="65bd71144e">
    <diagram id="WuXZCKoCkNRnyYbhT0l_" name="Page-1">
        <mxGraphModel dx="1078" dy="1762" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="3" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;Rock paper scissors&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="70" y="-150" width="700" height="110" as="geometry"/>
                </mxCell>
                <mxCell id="4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="6" target="13">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="110" y="610" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="6" target="14">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="490" y="580" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="17" style="edgeStyle=none;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="6">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="179.6470588235295" y="60" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="6" value="&amp;nbsp;&lt;br&gt;Game Start Flow&lt;br&gt;&lt;br&gt;User chooses to play against another player or computer&lt;br&gt;&lt;br&gt;prompt to type 'player or 'computer'&lt;br&gt;&lt;br&gt;check input - enforce lowercase on input&lt;br&gt;&lt;br&gt;Alert - 'you will play 3 rounds - get ready'&lt;br&gt;&lt;br&gt;player presses ok" style="whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
                    <mxGeometry x="80" y="30" width="250" height="250" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="Determine winner&lt;br&gt;&lt;br&gt;player1 vs player 2&lt;br&gt;&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#9;&lt;/span&gt;if player 1 inputs rock and player 2 inputs scissors, player 1 wins.&lt;br&gt;&lt;br&gt;if player 1 inputs scissors and player 2 inputs paper. player 1 wins&lt;br&gt;&lt;br&gt;if player 1 inputs paper and player 2 inputs rock .&lt;br&gt;player 1 wins.&lt;br&gt;&lt;br&gt;&amp;nbsp;If there is a tie then the game ends in a draw" style="whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
                    <mxGeometry x="545" y="65" width="270" height="270" as="geometry"/>
                </mxCell>
                <mxCell id="13" value="player1 vs player2&lt;br&gt;&lt;br&gt;Prompt player1 to choose 'rock', 'paper' or 'scissors' for round 1&lt;br&gt;&lt;br&gt;check player1choice valid input&lt;br&gt;&lt;br&gt;prompt player2 to choose between 'rock', 'paper' or 'scissors'&lt;br&gt;&lt;br&gt;check player2choice valid input enforce lower case&lt;br&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;compare player1choice with player2choice&lt;br&gt;&lt;br&gt;use 'possible outcomes' to determine the winner of that round.&lt;br&gt;&lt;br&gt;score 1 point for win&lt;br&gt;score 0 points for draw or loss&lt;br&gt;&lt;br&gt;store score&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;Prompt player1 to choose 'rock', 'paper' or 'scissors' for round 2&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check player1choice valid input&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;prompt player2 to choose between 'rock', 'paper' or 'scissors'&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check player2choice valid input&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;compare player1choice with player2choice&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;use 'possible outcomes' to determine the winner of that round.&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 1 point for win&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 0 points for draw or loss&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;store score&amp;nbsp;&lt;br&gt;&lt;br&gt;check if player1 or player2 has 2 points&lt;br&gt;&lt;br&gt;If they have alert 'player1 wins' or player2 wins' and break for new game&lt;br&gt;&lt;br&gt;if they haven't alert 'get ready for the final round'&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;Prompt player1 to choose 'rock', 'paper' or 'scissors' for round 3&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check player1choice valid input&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;prompt player2 to choose between 'rock', 'paper' or 'scissors'&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check player2choice valid input&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;compare player1choice with player2choice&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;use 'possible outcomes' to determine the winner of that round.&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 1 point for win&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 0 points for draw or loss&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;store score&amp;nbsp;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check if player1 or player2 has 2 points&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;If they have alert 'player1 wins' or player2 wins' and break for new game&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;if they haven't alert 'it's a draw&lt;br&gt;&lt;br&gt;And break for a new game'" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="20" y="320" width="250" height="1310" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;player1 vs cpu&lt;br&gt;&lt;br&gt;Prompt player1 to choose 'rock', 'paper' or 'scissors' for round 1&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check player1choice valid input&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;CPU makes its choice in the background (math.random)&lt;br&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;prompt saying the cpu has made its choice&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;compare player1choice with cpuchoice&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;use 'possible outcomes' to determine the winner of that round.&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 1 point for win&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 0 points for draw or loss&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;store score&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;---&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;Prompt player1 to choose 'rock', 'paper' or 'scissors' for round 2&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check player1choice valid input&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;CPU makes its choice in the background (math.random)&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;prompt saying the cpu has made its choice&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;compare player1choice with cpuchoice&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;use 'possible outcomes' to determine the winner of that round.&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 1 point for win&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 0 points for draw or loss&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;store score&amp;nbsp;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check if player1 or cpu has 2 points&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;If they have alert 'player1 wins' or cpu wins' and break for new game&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;if they haven't alert 'get ready for the final round'&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;---&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;Prompt player1 to choose 'rock', 'paper' or 'scissors' for round 3&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check player1choice valid input&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;CPU makes its choice in the background (math.random)&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;prompt saying the cpu has made its choice&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;compare player1choice with cpuchoice&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;use 'possible outcomes' to determine the winner of that round.&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 1 point for win&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;score 0 points for draw or loss&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;store score&amp;nbsp;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;check if player1 or cpu has 2 points&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;If they have alert 'player1 wins' or cpu wins' and break for new game&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;if they haven't alert 'it's a draw&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;And break for a new game'" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="300" y="320" width="210" height="1310" as="geometry"/>
                </mxCell>
                <mxCell id="15" value="1.&amp;nbsp; The user should be able to choose a game mode. vs player or computer&lt;br&gt;&lt;br&gt;2. The user should be able to choose between 'Rock', 'Paper', or 'Scissors' when the game starts&amp;nbsp;&lt;br&gt;&lt;br&gt;3. Change user Input to lowercase so there are no capitalisation issues&amp;nbsp;&lt;br&gt;&lt;br&gt;4. Make sure the user input is valid and if it's not return a statement.&lt;br&gt;&lt;br&gt;5.&amp;nbsp; have the computer&amp;nbsp; and player 2 make a choice&amp;nbsp;&lt;br&gt;&lt;br&gt;6. compare user Input and computer/ player 2 input and determine a winner&lt;br&gt;7. check if the inputs are the same and if it is, return a statement for another round&amp;nbsp;&lt;br&gt;8. deal with a tie condition&amp;nbsp;&lt;br&gt;9. Write logic for the game : eg. In the condition user input is ' paper'&amp;nbsp; computer choice must either be 'scissors' or 'rock'&lt;br&gt;&lt;br&gt;10. a function to log the results of both user input and computer input / player 2&lt;br&gt;11. determine the winner" style="whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
                    <mxGeometry x="230" y="-870" width="400" height="400" as="geometry"/>
                </mxCell>
                <mxCell id="16" value="Milestones" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="40" y="-950" width="270" height="60" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
    <diagram id="-B3FunR-5c2qJdFJMEam" name="Page-1">
        <mxGraphModel dx="755" dy="452" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>